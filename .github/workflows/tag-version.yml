name: Create Release with Assets

on:
  push:
    branches:
      - master
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get latest tag
        id: get-latest-tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump-version
        run: |
          latest_tag=${{ steps.get-latest-tag.outputs.latest_tag }}
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          # Build for various platforms
          PLATFORMS=("linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64" "windows/amd64")
          for platform in "${PLATFORMS[@]}"
          do
            platform_split=(${platform//\// })
            GOOS=${platform_split[0]}
            GOARCH=${platform_split[1]}
            output_name="incident-checker-${{ steps.bump-version.outputs.new_version }}-$GOOS-$GOARCH"
            if [ $GOOS = "windows" ]; then
              output_name+=".exe"
            fi
            echo "Building for $GOOS/$GOARCH..."
            GOOS=$GOOS GOARCH=$GOARCH go build -o "dist/$output_name" .
            if [ $GOOS != "windows" ]; then
              chmod +x "dist/$output_name"
            fi
          done

      - name: Create and push tag
        run: |
          new_version=${{ steps.bump-version.outputs.new_version }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "$new_version" -m "Release $new_version"
          git push origin "$new_version"

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump-version.outputs.new_version }}
          name: Release ${{ steps.bump-version.outputs.new_version }}
          draft: false
          prerelease: false
          files: |
            dist/*
          body: |
            ## Release ${{ steps.bump-version.outputs.new_version }}
            
            ### Assets
            - Linux (amd64, arm64)
            - macOS (amd64, arm64)
            - Windows (amd64)
            
            ### SHA-256 Checksums
            ```
            ${{ steps.sha.outputs.hashes }}
            ```
            
            ### Changes
            - Automated release from master branch
